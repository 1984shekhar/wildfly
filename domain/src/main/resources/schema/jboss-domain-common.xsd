<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ JBoss, Home of Professional Open Source.
  ~ Copyright 2010, Red Hat, Inc., and individual contributors
  ~ as indicated by the @author tags. See the copyright.txt file in the
  ~ distribution for a full listing of individual contributors.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    targetNamespace="urn:jboss:domain:1.0"
    xmlns="urn:jboss:domain:1.0"
    elementFormDefault="qualified"
    attributeFormDefault="unqualified"
    >

    <!-- Include the logging schema definitions for reuse -->
    <xs:include schemaLocation="jboss-domain-logging.xsd"/>

    <xs:complexType name="socket-binding-group-refType">
        <xs:attribute name="ref" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    The socket group to use for the server group or server.
                </xs:documentation>
            </xs:annotation>            
        </xs:attribute>
        <xs:attribute name="port-offset" type="xs:int" default="0">
            <xs:annotation>
                <xs:documentation>
                    Increment to apply to the base port values defined in the 
                    referenced socket group to derive the values to use on this
                    server.
                </xs:documentation>
            </xs:annotation>            
        </xs:attribute>
    </xs:complexType>


    <xs:complexType name="named-interfacesType">
        <xs:annotation>
            <xs:documentation>
                A list of named network interfaces. The interfaces may or may
                not be fully specified (i.e. include criteria on how to determine
                their IP address.)
            </xs:documentation>
        </xs:annotation> 
        <xs:sequence>
            <xs:element name="interface" type="named-interfaceType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!-- TODO make this and specified-interfaceType the same except for interface-criteriaGroup minOccurs -->
    <xs:complexType name="named-interfaceType">
        <xs:annotation>
            <xs:documentation>
                A named network interface, but without any criteria
                for determining the IP address to associate with that interface.
                Acts as a placeholder in the model (e.g. at the domain level)
                until a fully specified interface definition is applied at a
                lower level (e.g. at the server level, where available addresses
                are known.)
            </xs:documentation>
        </xs:annotation> 
        <xs:group ref="interface-criteriaGroup" minOccurs="0"/>
        <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="specified-interfacesType">
        <xs:annotation>
            <xs:documentation>
                A list of fully specified named network interfaces.
            </xs:documentation>
        </xs:annotation> 
        <xs:sequence>
            <xs:element name="interface" type="specified-interfaceType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="specified-interfaceType" >
        <xs:annotation>
            <xs:documentation>
                A named network interface, along with required criteria
                for determining the IP address to associate with that interface.
            </xs:documentation>
        </xs:annotation>
        <xs:group ref="interface-criteriaGroup" minOccurs="1"/>
        <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>
    
    <xs:group name="interface-criteriaGroup">
        <xs:annotation>
            <xs:documentation>
                A set of criteria that can be used at runtime to determine
                what IP address to use for an interface.
            </xs:documentation>
        </xs:annotation>            
        <xs:choice>
            <xs:element name="inet-address" type="inet-addressType"/> 
            <!-- xs:element name="nic" type="nicType"/ --> 
            <xs:choice maxOccurs="unbounded">
                <xs:element name="loopback" type="loopbackType"/>
                <xs:element name="multicast" type="multicastType"/>
                <xs:element name="point-to-point" type="point-to-pointType"/>
                <xs:element name="virtual" type="interface-virtualType"/>
                <xs:element name="up" type="interface-upType"/>
                <xs:element name="public-address" type="public-addressType"/>
                <xs:element name="private-address" type="private-addressType"/>
                <xs:element name="nic" type="nicType" minOccurs="0" maxOccurs="unbounded"/>  
                <xs:element name="nic-match" type="nic-matchType" minOccurs="0" maxOccurs="unbounded"/> 
                <xs:element name="subnet-match" type="subnet-matchType" minOccurs="0" maxOccurs="unbounded"/> 
                <xs:element name="not" type="address-exclusionType"/>
                <xs:element name="any" type="address-exclusionType"/>
            </xs:choice>
        </xs:choice>
    </xs:group>
    
    <xs:complexType name="inet-addressType">
        <xs:attribute name="value" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    Either a IP address in IPv6 or IPv4 dotted decimal notation,
                    or a hostname that can be resolved to an IP address.
                </xs:documentation>
            </xs:annotation>            
        </xs:attribute>
    </xs:complexType>
    
    <xs:complexType name="nicType">
        <xs:attribute name="name" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    The name of a network interface (e.g. eth0, eth1, lo).
                </xs:documentation>
            </xs:annotation>            
        </xs:attribute>
    </xs:complexType>
    
    <xs:complexType name="nic-matchType">
        <xs:attribute name="value" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    A regular expression against which the names of the network
                    interfaces available on the machine can be matched to find
                    an acceptable interface.
                </xs:documentation>
            </xs:annotation>            
        </xs:attribute>
    </xs:complexType>
    
    <xs:complexType name="subnet-matchType">
        <xs:attribute name="value" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation>
                    A network IP address and the number of bits in the
                    address' network prefix, written in "slash notation";
                    e.g. "192.168.0.0/16".
                </xs:documentation>
            </xs:annotation>            
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="address-exclusionType">
        <xs:choice>
            <xs:element name="loopback" type="loopbackType"/>
            <xs:element name="multicast" type="multicastType"/>
            <xs:element name="point-to-point" type="point-to-pointType"/>
            <xs:element name="virtual" type="interface-virtualType"/>
            <xs:element name="up" type="interface-upType"/>
            <xs:element name="public-address" type="public-addressType"/>
            <xs:element name="private-address" type="private-addressType"/> 
            <xs:element name="nic" type="nicType" minOccurs="0" maxOccurs="unbounded"/>  
            <xs:element name="nic-match" type="nic-matchType" minOccurs="0" maxOccurs="unbounded"/> 
            <xs:element name="subnet-match" type="subnet-matchType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="loopbackType">
            <xs:annotation>
                <xs:documentation>
                    Empty element indicating that part of the selection criteria
                    for an interface should be whether or not it is a loopback
                    interface.
                </xs:documentation>
            </xs:annotation>            
    </xs:complexType>

    <xs:complexType name="multicastType">
            <xs:annotation>
                <xs:documentation>
                    Empty element indicating that part of the selection criteria
                    for an interface should be whether or not it supports
                    multicast.
                </xs:documentation>
            </xs:annotation>            
    </xs:complexType>

    <xs:complexType name="point-to-pointType">
            <xs:annotation>
                <xs:documentation>
                    Empty element indicating that part of the selection criteria
                    for an interface should be whether or not it is a point-to-point
                    interface.
                </xs:documentation>
            </xs:annotation>            
    </xs:complexType>

    <xs:complexType name="interface-upType">
            <xs:annotation>
                <xs:documentation>
                    Empty element indicating that part of the selection criteria
                    for an interface should be whether or not it is currently up.
                </xs:documentation>
            </xs:annotation>            
    </xs:complexType>

    <xs:complexType name="interface-virtualType">
            <xs:annotation>
                <xs:documentation>
                    Empty element indicating that part of the selection criteria
                    for an interface should be whether or not it is a virtual
                    interface.
                </xs:documentation>
            </xs:annotation>            
    </xs:complexType>

    <xs:complexType name="public-addressType">
            <xs:annotation>
                <xs:documentation>
                    Empty element indicating that part of the selection criteria
                    for an interface should be whether or not it has a publicly
                    routable address.
                </xs:documentation>
            </xs:annotation>            
    </xs:complexType>

    <xs:complexType name="private-addressType">
            <xs:annotation>
                <xs:documentation>
                    Empty element indicating that part of the selection criteria
                    for an interface should be whether or not it has a publicly
                    routable address.
                </xs:documentation>
            </xs:annotation>            
    </xs:complexType>
    
<!-- Common definitions -->
    <xs:complexType name="java-configType">
        <xs:all minOccurs="0" maxOccurs="1">
            <xs:element name="heap" type="heapType" minOccurs="0"/>
            <!-- XX:PermSize, XX:MaxPermSize -->
            <xs:element name="permgen" type="bounded-memory-sizeType" minOccurs="0"/>
            <!-- Xss -->
            <xs:element name="stack" type="memory-sizeType" minOccurs="0"/>
            <xs:element name="jvm-options" type="jvm-optionsType" minOccurs="0"/>
            <xs:element name="jvm-properties" type="propertiesType" minOccurs="0"/>
            <xs:element name="system-properties" type="propertiesType" minOccurs="0"/>
            <xs:element name="classpath-prefix" minOccurs="0"/>
            <xs:element name="classpath-suffix" minOccurs="0"/>
            <xs:element name="server-classpath" minOccurs="0"/>
            <xs:element name="system-classpath" minOccurs="0"/>
            <xs:element name="native-library-path-prefix" minOccurs="0"/>
            <xs:element name="native-library-path-suffix" minOccurs="0"/>
            <xs:element name="bytecode-preprocessors" minOccurs="0"/>
        </xs:all>
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="java-home" />
        <xs:attribute name="debug-enabled" default="false" type="boolean"/>
        <xs:attribute name="debug-options" default="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n"/>
        <xs:attribute name="javac-options" default="-g"/>
        <xs:attribute name="env-classpath-ignored" default="true" type="boolean"/>
    </xs:complexType>

    <xs:complexType name="heapType">
        <xs:attribute name="size" use="optional">
            <xs:annotation>
                <xs:documentation>Initial JVM heap size</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="max-size" use="optional">
            <xs:annotation>
                <xs:documentation>Maximum JVM heap size</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="jvm-optionsType">
       <xs:sequence>
          <xs:element name="option" type="jvm-optionType" minOccurs="0" maxOccurs="unbounded"/>
       </xs:sequence>
    </xs:complexType>

    <xs:complexType name="jvm-optionType">
        <xs:attribute name="value" use="required">
            <xs:annotation>
                <xs:documentation>JVM option value</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="bounded-memory-sizeType">
        <xs:attribute name="size" type="xs:string"/>
        <xs:attribute name="max-size" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="memory-sizeType">
        <xs:attribute name="size" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="propertiesType">
        <xs:sequence>
            <xs:element name="property" type="propertyType" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="propertyType">
        <xs:attribute name="name" use="required"/>
        <xs:attribute name="value" use="required"/>
    </xs:complexType>

    <xs:simpleType name="boolean">
        <xs:restriction base="xs:token">
            <xs:enumeration value="yes"/>
            <xs:enumeration value="no"/>
            <xs:enumeration value="on"/>
            <xs:enumeration value="off"/>
            <xs:enumeration value="1"/>
            <xs:enumeration value="0"/>
            <xs:enumeration value="true"/>
            <xs:enumeration value="false"/>
        </xs:restriction>
    </xs:simpleType>

</xs:schema>
