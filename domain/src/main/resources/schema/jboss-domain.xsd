<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ JBoss, Home of Professional Open Source.
  ~ Copyright 2010, Red Hat, Inc., and individual contributors
  ~ as indicated by the @author tags. See the copyright.txt file in the
  ~ distribution for a full listing of individual contributors.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 2.1 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  ~ Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns="urn:jboss:domain:1.0"
  targetNamespace="urn:jboss:domain:1.0"
  xmlns:sec="urn:jboss:security-config:5.0"
  elementFormDefault="qualified"
  attributeFormDefault="unqualified"
>

  <!-- Include the web schema definitions for reuse -->
  <xs:include schemaLocation="jboss-domain-web.xsd"/>
  <!-- Import the security schema definitions for reuse -->
  <xs:import namespace="urn:jboss:security-config:5.0"  schemaLocation="security-config_5_0.xsd"/>
  
  <xs:element name="domain">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <!-- TODO the domain-configuration concept needs review -->
        <xs:element name="domain-configuration" type="domain-configurationType"/>
        <xs:element name="extension" minOccurs="0" maxOccurs="unbounded" type="domain-extensionType"/>
        <xs:element name="profile" type="profileType" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="deployments" type="domainDeploymentsType" minOccurs="0"/>
        <!-- TODO this should be named-interfacesType once it is fixed -->
        <xs:element name="interfaces" type="specified-interfacesType"/>
        <xs:element name="socket-groups" type="socket-groupsType"/>
        <xs:element name="server-groups" type="server-groupsType"/>
        <xs:element name="security-policy" type="sec:PolicyConfig" />
        <xs:element name="containers">
          <xs:complexType>
            <xs:all>
              <xs:element name="web-containers" type="web-containersType" />
            </xs:all>
          </xs:complexType>
                                                          
        </xs:element>
        <xs:element name="system-properties" type="propertiesType"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  
  <xs:complexType name="server-groupsType">
     <xs:sequence>
        <xs:element name="server-group" type="server-groupType" minOccurs="0" maxOccurs="unbounded"/>
     </xs:sequence>
  </xs:complexType>

  <xs:complexType name="server-groupType">
     <xs:sequence>
        <xs:element name="jvm" type="java-configType" minOccurs="0"/>
        <xs:element name="socket-group" type="socket-group-refType" minOccurs="0"/>
            
        <xs:element name="deployments" type="domainDeploymentsType" minOccurs="0"/>

        <xs:element name="resources" minOccurs="0" maxOccurs="unbounded" type="resourcesType"/>
        <xs:element name="system-properties" minOccurs="0" type="propertiesType"/>
     </xs:sequence>
     <xs:attribute name="group-name" type="xs:ID">
        <xs:annotation>
           <xs:documentation>
              The name of the server group
           </xs:documentation>
        </xs:annotation>
     </xs:attribute>
     <xs:attribute name="profile" type="xs:string">
        <xs:annotation>
           <xs:documentation>
              The name of the profile this server is running.
           </xs:documentation>
        </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="domainDeploymentsType">
    <xs:annotation>
      <xs:documentation>Contains a list of domain-level deployments</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="deployment" type="deploymentType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="deploymentType">
    <xs:annotation>
      <xs:documentation>Deployment represents anything that can be deployed (i.g. an application such as EJB-JAR, WAR, EAR,
                        any kind of standard archive such as RAR or JBoss-specific deployment descriptor such as -aop.xml, -jboss-beans.xml, etc),
                        which can be enabled or disabled on a domain level.

                        If a certain deployment (or a set of) is not relevant for a specific server-group
                        this deployment (or a set of) can be disabled for this server-group in the server-group configuration.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>Name of the deployment</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="sha1" use="required">
      <xs:annotation>
        <xs:documentation>The checksum of the deployment</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="allowed" use="optional" type="xs:boolean" default="true">
      <xs:annotation>
        <xs:documentation>Whether the deployment is allowed.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="start" use="optional" type="xs:boolean" default="true">
      <xs:annotation>
        <xs:documentation>Whether the deployment starts automatically when the server starts up.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

<!-- TODO this is not used anywhere yet -->
    <xs:complexType name="clustersType">
        <xs:complexContent>
            <xs:extension base="server-groupType">
                <xs:sequence>
                    <xs:element name="partition-name" type="xs:string"/>
                    <xs:element name="state-transfer-timeout" type="xs:integer"/>
                    <xs:element name="method-call-timeout" type="xs:integer"/>
                </xs:sequence>
                <xs:attribute name="category" type="xs:string" use="required"/>                    
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

  <!-- domain-configuration related definitions -->
  <xs:complexType name="domain-configurationType">
    <xs:annotation>
      <xs:documentation>The domain manager/server bootstrap configuration</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="bootstrapURI"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="bootstrapURI" type="xs:string">
    <xs:annotation>
      <xs:documentation>The URI for bootstraping a domain server</xs:documentation>
    </xs:annotation>
  </xs:element>
  
  <xs:complexType name="domain-extensionType">
    <xs:annotation>
      <xs:documentation>An extension module that adds extensions to the domain</xs:documentation>
    </xs:annotation>
    <xs:attribute name="prefix" use="optional">
      <xs:annotation>
        <xs:documentation>A prefix that if applied to a subsystem name identifies
         that subsystem as being associated with this extension module. Used to
         provide a namespace for subsystem names so unrelated extension modules
         that happen to use the same subsystem names can be used.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="module" use="required" type="xs:string">
      <xs:annotation>
        <xs:documentation>The name of the module, in group:artifiact format; e.g. org.foo:widget</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    
  </xs:complexType>

  <xs:complexType name="profileType">
    <xs:annotation>
      <xs:documentation>Contains a list of subsystems</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="subsystem" type="subsystemType" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>Name of the profile</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="extends" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Name of the profile this profile extends</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="subsystemType">
    <xs:annotation>
      <xs:documentation>Subsystem is a specific technology, service or a set of or a functionality
                        which can be enabled or disabled on a domain level.
                        Subsystems enabled on the domain level by default are enabled for all the server-groups in the domain.
                        If a certain subsystem (or a set of) is not relevant for a specific server-group
                        this subsystem (or a set of) can be disabled for this server-group in the server-group configuration.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>Name of the subsystem</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="allowed" use="optional" type="xs:boolean" default="true">
      <xs:annotation>
        <xs:documentation>Whether the subsystem is allowed.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

   <xs:complexType name="socket-groupsType">
    <xs:annotation>
      <xs:documentation>Contains a list of socket groups</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="socket-group" type="socket-groupType" maxOccurs="unbounded"/>
    </xs:sequence>
   </xs:complexType>

   <xs:complexType name="socket-groupType">
    <xs:annotation>
      <xs:documentation>Contains a list of socket configurations</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="socket" type="socketType" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="extends" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>Name of a previously declared socket group this group extends.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="default-interface" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>
            Name of an interface that should be used as the interface for
            any sockets that do not explicitly declare an interface.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
   </xs:complexType>
   
   <xs:complexType name="socketType">
    <xs:annotation>
      <xs:documentation>Configuration information for a socket.</xs:documentation>
    </xs:annotation>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="interface" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>
            Name of the interface to which the socket should be bound, or, for multicast
            sockets, the interface on which it should listen. This should
            be one of the declared interfaces.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="port" type="xs:unsignedShort" use="optional" default="0">
      <xs:annotation>
        <xs:documentation>
            Number of the port to which the socket should be bound.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="fixed-port" type="xs:boolean" use="optional" default="false">
      <xs:annotation>
        <xs:documentation>
            Whether the port value should remain fixed even if numerically offsets
            are applied to the other sockets in the socket group..
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="multicast-address" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>
            Multicast address on which the socket should receive multicast
            traffic. If unspecified, the socket will not be configured
            to receive multicast.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="multicast-port" type="xs:positiveInteger" use="optional">
      <xs:annotation>
        <xs:documentation>
            Port on which the socket should receive multicast
            traffic. If unspecified, the socket will not be configured
            to receive multicast.
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
   </xs:complexType>

    <!-- resources related definitions -->
    <xs:complexType name="resourcesType">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="external-jndi-resource" type="external-jndi-resourceType"/>
            <xs:element name="jdbc-resource" type="external-jndi-resourceType"/>
            <xs:element name="mail-resource" type="mail-resourceType"/>
            <xs:element name="persistence-manager-factory-resource"
                type="persistence-manager-factory-resourceType"/>
            <!-- 
            <xs:group ref="connector-resource"/>
            <xs:group ref="resource-adapter-config"/>
            <xs:group ref="connector-connection-pool"/>
            -->
        </xs:choice>
        <xs:attribute name="name"/>
        <xs:attribute name="jndi-name">
            <xs:annotation>
                <xs:documentation>The JNDI name under which to bind the resource</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="factory-class">
            <xs:annotation>
                <xs:documentation>The class name of the ObjectFactory</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="external-jndi-resourceType">
        <xs:complexContent>
            <xs:extension base="resource-commonType">
                <xs:attribute name="jndi-lookup-name" use="required"/>
                <xs:attribute name="res-type" use="required"/>
                <xs:attribute name="factory-class" use="required"/>
                <xs:attribute name="enabled" default="true" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="jdbc-resourceType">
        <xs:complexContent>
            <xs:extension base="resource-commonType">
                <xs:attribute name="pool-name" use="required"/>
                <xs:attribute name="enabled" default="true" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:attributeGroup name="jdbc-connection-pool">
        <xs:attribute name="name" use="required"/>
    </xs:attributeGroup>

    <xs:complexType name="mail-resourceType">
        <xs:complexContent>
            <xs:extension base="resource-commonType">
                <xs:sequence minOccurs="0" maxOccurs="1">
                    <xs:annotation>
                        <xs:documentation>The JavaMail connection properties</xs:documentation>
                    </xs:annotation>
                    <xs:element name="mail.store.protocol" type="xs:string"/>
                    <xs:element name="mail.transport.protocol" type="xs:string"/>
                    <xs:element name="mail.user" type="xs:string"/>
                    <xs:element name="mail.pop3.host" type="xs:string"/>
                    <xs:element name="mail.smtp.host" type="xs:string"/>
                    <xs:element name="mail.smtp.port" type="xs:string"/>
                    <xs:element name="mail.from" type="xs:string"/>
                    <xs:element name="mail.debug" type="xs:string"/>
                </xs:sequence>
                <xs:attribute name="user" use="required"/>
                <xs:attribute name="password" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="persistence-manager-factory-resourceType">
        <xs:complexContent>
            <xs:extension base="resource-commonType">
                <xs:attribute name="factory-class" use="required">
                    <xs:annotation>
                        <xs:documentation>The class name of the JPA factory</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="resource-commonType">
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:element name="properties" type="propertiesType"/>
        </xs:sequence>
    </xs:complexType>

</xs:schema>
