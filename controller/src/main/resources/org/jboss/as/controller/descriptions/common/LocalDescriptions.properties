# Common attributes
namespaces=Map of namespaces used in the configuration XML document, where keys are namespace prefixes and values are schema URIs.
namespaces.add=Adds a namespace prefix mapping to the namespaces attribute's map.
namespaces.add.namespace=The namespace to add; a key/value pair where the key is the namespace prefix and the value is the schema URI.
namespaces.remove=Removes a namespace prefix mapping from the namespaces attribute's map.
namespaces.remove.namespace=The prefix of the namespace to remove.
schema-locations=Map of locations of XML schemas used in the configuration XML document, where keys are schema URIs and values are locations where the schema can be found.
schema-locations.add=Adds a schema location mapping to the schema-locations attribute's map.
schema-locations.add.schema-location=The schema location to add; a key/value pair where the key is the schema URI and the value is the location where the schema can be found.
schema-locations.remove=Removes a schema location mapping from the schema-locations attribute's map.
schema-locations.remove.schema-location=The URI of the schema location to add.

# Management
server.management.native-api=Configuration of the server's native management protocol
server.management.native-api.interface=Interface on which the server's socket for native management communication should be opened.
server.management.native-api.port=Port on which the server's socket for native management communication should be opened.
server.management.http-api=Configuration of the server's HTTP management protocol
server.management.http-api.interface=Interface on which the server's socket for HTTP management communication should be opened.
server.management.http-api.port=Port on which the server's socket for HTTP management communication should be opened.

# Extensions
extension=A module that extends the standard capabilities of a domain or a standalone server.
extension.module=The name of the module.
extension.add=Adds an extension.
extension.remove=Removes an extension.

# Paths
named_path=A named filesystem path, but without a requirement to specify the actual path. If no actual path is specified, acts as a placeholder in the model (e.g. at the domain level) until a fully specified path definition is applied at a lower level (e.g. at the host level, where available addresses are known.)
specified_path=A named filesystem path.
path.name=The name of the path. Cannot be one of the standard fixed paths provided by the system: <ul><li>jboss.home - the root directory of the JBoss AS distribution</li><li>user.home - user's home directory</li><li>user.dir - user's current working directory</li><li>java.home - java installation directory</li><li>jboss.server.base.dir - root directory for an individual server instance</li></ul> Note that the system provides other standard paths that can be overridden by declaring them in the configuration file. See the 'relative-to' attribute documentation for a complete list of standard paths.
path.path=The actual filesystem path. Treated as an absolute path, unless the 'relative-to' attribute is specified, in which case the value is treated as relative to that path. <p>If treated as an absolute path, the actual runtime pathname specified by the value of this attribute will be determined as follows: </p>If this value is already absolute, then the value is directly used.  Otherwise the runtime pathname is resolved in a system-dependent way.  On UNIX systems, a relative pathname is made absolute by resolving it against the current user directory. On Microsoft Windows systems, a relative pathname is made absolute by resolving it against the current directory of the drive named by the pathname, if any; if not, it is resolved against the current user directory.
path.relative-to=The name of another previously named path, or of one of the standard paths provided by the system. If 'relative-to' is provided, the value of the 'path' attribute is treated as relative to the path specified by this attribute. The standard paths provided by the system include:<ul><li>jboss.home - the root directory of the JBoss AS distribution</li><li>user.home - user's home directory</li><li>user.dir - user's current working directory</li><li>java.home - java installation directory</li><li>jboss.server.base.dir - root directory for an individual server instance</li><li>jboss.server.data.dir - directory the server will use for persistent data file storage</li><li>jboss.server.log.dir - directory the server will use for log file storage</li><li>jboss.server.tmp.dir - directory the server will use for temporary file storage</li><li>jboss.domain.servers.dir - directory under which a host controller will create the working area for individual server instances</li></ul>
path.add=Add a new path.
path.add.path=The value of the path's 'path' attribute
path.add.relative-to=The value of the path's 'relative-to' attribute
path.remove=Remove a path

#Profiles
profile=A named set of subsystem configurations.
profile.name=The name of the profile
profile.add=Add a new 'profile'
profile.add.name=The value of the new profile's 'name' attribute
profile.describe=Outputs the profile's subsystems as a list of operations that can be executed to create the same model
profile.remove=Remove a 'profile'
profile.remove.name=The value of the profile's 'name' attribute
profile.includes=A list of other profiles to include in this profile
profile.include=Specifies that a contents of a named profile are to be included in the profile whose definition includes this item.
profile.include.profile=The name of the included profile
profile.includes.add=Add a profile to the list of included profiles
profile.includes.add.include=The name of the included profile
profile.includes.remove=Remove a profile from the list of included profiles
profile.includes.remove.include=The name of the included profile
profile.subsystem=The subsystems that make up the profile.

# Interfaces
named_interface=A named network interface, but without any criteria for determining the IP address to associate with that interface. Acts as a placeholder in the model (e.g. at the domain level) until a fully specified interface definition is applied at a lower level (e.g. at the server level, where available addresses are known.)
specified_interface=A named network interface, along with required criteria for determining the IP address to associate with that interface.
interface.name=The name of the interface.
interface.criteria=A set of criteria that can be used at runtime to determine what IP address to use for an interface.
interface.add=Add a new interface specification.
interface.add.criteria=The value of the interface's 'criteria' attribute
interface.remove=Remove an interface specification.

# Sockets
socket_binding_group=Contains a list of socket configurations.
socket_binding_group.name=The name of the socket binding group.
socket_binding_group.default-interface=Name of an interface that should be used as the interface for any sockets that do not explicitly declare one.
socket_binding_group.socket-binding=The individual socket configurtions.
server_socket_binding_group.port-offset=Increment to apply to the base port values defined in the socket bindings to derive the runtime values to use on this server.
domain_socket_binding_group.include=A list of socket binding group names whose bindings are to be included in this socket-binding-group. This binding group's default interface will be applied to any included  bindings that do not specify an interface.
server_socket_binding_group.add=Adds the socket binding group to this server.
server-socket_binding_group.add.port-offset=The value of the socket binding group's 'port-offset' attribute.
domain_socket_binding_group.add=Add a new socket binding group.
domain-socket_binding_group.add.include=The value of the socket binding group's 'include' attribute.
socket_binding_group.add.default-interface=The value of the socket binding group's 'default-interface' attribute.
socket_binding_group.remove=Removes a socket binding group.
domain_socket_binding_group.include.add=Add a group to the list of socket binding group names whose bindings are to be included in this socket-binding-group.
domain_socket_binding_group.include.add.group=The name of the group to add.
domain_socket_binding_group.include.remove=Remove a group from the list of socket binding group names whose bindings are to be included in this socket-binding-group.
domain_socket_binding_group.include.remove.group=The name of the group to remove.
socket_binding=Configuration information for a socket.
socket_binding.name=The name of the socket. Services which need to access the socket configuration information will find it using this name.
socket_binding.interface=Name of the interface to which the socket should be bound, or, for multicast sockets, the interface on which it should listen. This should be one of the declared interfaces.
socket_binding.port=Number of the port to which the socket should be bound.
socket_binding.fixed-port=Whether the port value should remain fixed even if numeric offsets are applied to the other sockets in the socket group.
socket_binding.multicast-address=Multicast address on which the socket should receive multicast traffic. If unspecified, the socket will not be configured to receive multicast.
socket_binding.multicast-port=Port on which the socket should receive multicast traffic. Must be configured if 'multicast-address' is configured.
socket-binding.add=Adds a socket binding configuration to the group.
socket_binding.add.interface=The value of the socket binding's 'interface' attribute.
socket_binding.add.port=The value of the socket binding's 'port' attribute.
socket_binding.add.fixed-port=The value of the socket binding's 'fixed-port' attribute.
socket_binding.add.multicast-address=The value of the socket binding's 'multicast-address' attribute.
socket_binding.add.multicast-port=The value of the socket binding's 'multicast-port' attribute.
socket_binding.remove=Removes a socket binding configuration from the group.

# Subsystem
subsystem.describe=Outputs the subsystem as a list of operations that can be executed to create the original model

# System Properties
system-properties=System properties.
system-properties.add=Adds a system property or updates an existing one.
system-properties.add.name=The name of the system property to add or update.
system-properties.add.value=The value of the system property to add or update.
system-properties.remove=Removes a system property.
system-properties.remove.name=The name of the system property to remove.

# Global operations
global.read-attribute=Gets the value of an attribute for the selected node
global.read-attribute.name=The name of the attribute to get the value for under the selcted node
global.read-attribute.reply=The value of the attribute
global.read-attribute.reply.type=The type will be that of the attribute found
global.read-children-names=Gets the names of all children under the selected node with the given type
global.read-children-names.child-type=The name of the node under which to get the children names
global.read-children-names.reply=The children names 
global.read-operation=Gets the details of an operation on the given node
global.read-operation.locale=The locale to get the operation description in. If null, the default locale will be used
global.read-operation.reply=The name of the operation to get details for
global.read-operation.type=The description of the operation. Undefined if not found
global.read-operation-names=Gets the names of all the operations for the given node
global.read-operation-names.reply=The operation names
global.read-resource=Reads a model node's sub values
global.read-resource.recursive=Whether to get the children recursively. If absent, false is the default
global.read-resource.reply=The ModelNode found at the specified address
global.read-resource-description=Gets the description of a node
global.read-resource-description.locale=The locale to get the node description in. If null, the default locale will be used
global.read-resource-description.operations=Default is false. If true the returned model will also include the operations
global.read-resource-description.reply=The description of the node
global.write-attribute=Sets the value of an attribute for the selected node
global.write-attribute.name=The name of the attribute to set the value for under the selcted node
global.write-attribute.value=The value of the attribute to set the value for under the selcted node. May be null if the underlying model supports null values.

# Common Operations
read-config-as-xml=Reads the current configuration and returns it in XML format.
read-config-as-xml.response=The XML form of the persistent configuration.

