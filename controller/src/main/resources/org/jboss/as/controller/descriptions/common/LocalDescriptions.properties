# Common attributes
namespaces=Map of namespaces used in the configuration XML document, where keys are namespace prefixes and values are schema URIs.
schema-locations=Map of locations of XML schemas used in the configuration XML document, where keys are schema URIs and values are locations where the schema can be found.

# Paths
named_path=A named filesystem path, but without a requirement to specify the actual path. If no actual path is specified, acts as a placeholder in the model (e.g. at the domain level) until a fully specified path definition is applied at a lower level (e.g. at the host level, where available addresses are known.)
path.name=The name of the path. Cannot be one of the standard fixed paths provided by the system: <ul><li>jboss.home - the root directory of the JBoss AS distribution</li><li>user.home - user's home directory</li><li>user.dir - user's current working directory</li><li>java.home - java installation directory</li><li>jboss.server.base.dir - root directory for an individual server instance</li></ul> Note that the system provides other standard paths that can be overridden by declaring them in the configuration file. See the 'relative-to' attribute documentation for a complete list of standard paths.
path.path=The actual filesystem path. Treated as an absolute path, unless the 'relative-to' attribute is specified, in which case the value is treated as relative to that path. <p>If treated as an absolute path, the actual runtime pathname specified by the value of this attribute will be determined as follows: </p>If this value is already absolute, then the value is directly used.  Otherwise the runtime pathname is resolved in a system-dependent way.  On UNIX systems, a relative pathname is made absolute by resolving it against the current user directory. On Microsoft Windows systems, a relative pathname is made absolute by resolving it against the current directory of the drive named by the pathname, if any; if not, it is resolved against the current user directory.
path.relative-to=The name of another previously named path, or of one of the standard paths provided by the system. If 'relative-to' is provided, the value of the 'path' attribute is treated as relative to the path specified by this attribute. The standard paths provided by the system include:<ul><li>jboss.home - the root directory of the JBoss AS distribution</li><li>user.home - user's home directory</li><li>user.dir - user's current working directory</li><li>java.home - java installation directory</li><li>jboss.server.base.dir - root directory for an individual server instance</li><li>jboss.server.data.dir - directory the server will use for persistent data file storage</li><li>jboss.server.log.dir - directory the server will use for log file storage</li><li>jboss.server.tmp.dir - directory the server will use for temporary file storage</li><li>jboss.domain.servers.dir - directory under which a host controller will create the working area for individual server instances</li></ul>
path.setPath=Set the value of the 'path' attribute
path.setPath.path=The new value of the 'path' attribute
path.setRelativeTo=Set the value of the 'relative-to' attribute
path.setRelativeTo.relative-to=The new value of the 'relative-to' attribute
path.add=Add a new 'path' child
path.add.name=The value of the path's 'name' attribute
path.add.path=The value of the path's 'path' attribute
path.add.relative-to=The value of the path's 'relative-to' attribute
path.remove=Remove a 'path' child
path.remove.name=The value of the path's 'name' attribute

#Profiles
profile=A named set of subsystem configurations.
profile.name=The name of the profile
profile.add=Add a new 'profile'
profile.add.name=The value of the new profile's 'name' attribute
profile.remove=Remove a 'profile'
profile.remove.name=The value of the profile's 'name' attribute
profile.includes=A list of other profiles to include in this profile
profile.include=Specifies that a contents of a named profile are to be included in the profile whose definition includes this item.
profile.include.profile=The name of the included profile
profile.includes.add=Add a profile to the list of included profiles
profile.includes.add.include=The name of the included profile
profile.includes.remove=Remove a profile from the list of included profiles
profile.includes.remove.include=The name of the included profile
profile.subsystem=The subsystems that make up the profile.

#Global
global.read-attribute=Gets the value of an attribute for the selected node
global.read-attribute.type=The name of the attribute to get the value for under the selcted node
global.read-attribute.reply=The value of the attribute
global.read-attribute.reply.type=The type will be that of the attribute found
global.read-children-names=Gets the names of all children under the selected node with the given type
global.read-children-names.child-type=The name of the node under which to get the children names
global.read-children-names.reply=The children names 
global.read-operation=Gets the details of an operation on the given node
global.read-operation.locale=The locale to get the operation description in. If null, the default locale will be used
global.read-operation.reply=The name of the operation to get details for
global.read-operation.type=The description of the operation. Undefined if not found
global.read-operation-names=Gets the names of all the operations for the given node
global.read-operation-names.reply=The operation names
global.read-resource-description=Gets the description of a node
global.read-resource-description.locale=The locale to get the node description in. If null, the default locale will be used
global.read-resource-description.operations=Default is false. If true the returned model will also include the operations
global.read-resource-description.reply=The description of the node
global.read-sub-model=Reads a model node's sub values
global.read-sub-model.recursive=Whether to get the children recursively. If absent, false is the default
global.read-sub-model.reply=The ModelNode found at the specified address
